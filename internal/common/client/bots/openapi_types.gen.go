// Package bots provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.2.0 DO NOT EDIT.
package bots

import (
	"time"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for BlockType.
const (
	Message   BlockType = "message"
	Question  BlockType = "question"
	Selection BlockType = "selection"
)

// Defines values for BotStatus.
const (
	Failed  BotStatus = "failed"
	Started BotStatus = "started"
	Stopped BotStatus = "stopped"
)

// Block defines model for Block.
type Block struct {
	NextState int       `json:"nextState"`
	Options   *[]Option `json:"options,omitempty"`
	State     int       `json:"state"`
	Text      string    `json:"text"`
	Title     string    `json:"title"`
	Type      BlockType `json:"type"`
}

// BlockType defines model for Block.Type.
type BlockType string

// Bot defines model for Bot.
type Bot struct {
	Blocks    []Block      `json:"blocks"`
	BotUUID   string       `json:"botUUID"`
	CreatedAt time.Time    `json:"createdAt"`
	Entries   []EntryPoint `json:"entries"`
	Mailings  *[]Mailing   `json:"mailings,omitempty"`
	Name      string       `json:"name"`
	Status    BotStatus    `json:"status"`
	Token     string       `json:"token"`
	UpdatedAt time.Time    `json:"updatedAt"`
}

// BotStatus defines model for Bot.Status.
type BotStatus string

// EntryPoint defines model for EntryPoint.
type EntryPoint struct {
	Key   string `json:"key"`
	State int    `json:"state"`
}

// Error defines model for Error.
type Error struct {
	Message string `json:"message"`
}

// GetBots defines model for GetBots.
type GetBots = []Bot

// Mailing defines model for Mailing.
type Mailing struct {
	EntryKey      string `json:"entryKey"`
	Name          string `json:"name"`
	RequiredState int    `json:"requiredState"`
}

// Option defines model for Option.
type Option struct {
	Next int    `json:"next"`
	Text string `json:"text"`
}

// PostBots defines model for PostBots.
type PostBots struct {
	Blocks   []Block      `json:"blocks"`
	BotUUID  string       `json:"botUUID"`
	Entries  []EntryPoint `json:"entries"`
	Mailings *[]Mailing   `json:"mailings,omitempty"`
	Name     string       `json:"name"`
	Token    string       `json:"token"`
}

// CreateBotJSONRequestBody defines body for CreateBot for application/json ContentType.
type CreateBotJSONRequestBody = PostBots
